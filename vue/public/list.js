export default [
  {
    id: 'device.input.1',
    name: 'input.1',
    keyValue: 'device.input',
    type: 'switch',
    icon: 'light',
    get: (v) => (v & 1 ? 1 : 0),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.input.2',
    name: 'input.2',
    keyValue: 'device.input',
    type: 'switch',
    icon: 'light',
    get: (v) => (v & 2 ? 1 : 0),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.input.3',
    name: 'input.3',
    keyValue: 'device.input',
    type: 'switch',
    icon: 'light',
    get: (v) => (v & 4 ? 1 : 0),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.input.4',
    name: 'input.4',
    keyValue: 'device.input',
    type: 'switch',
    icon: 'light',
    get: (v) => (v & 8 ? 1 : 0),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.input.5',
    name: 'input.5',
    keyValue: 'device.input',
    type: 'switch',
    icon: 'light',
    get: (v) => (v & 16 ? 1 : 0),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.input.6',
    name: 'input.6',
    keyValue: 'device.input',
    type: 'switch',
    icon: 'light',
    get: (v) => (v & 32 ? 1 : 0),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.output.1',
    name: 'output.1',
    keyValue: 'device',
    type: 'button',
    icon: 'bulb',
    get: ({ output }) => (output & 1 ? 1 : 0),
    set: (device, v) => ({ ...device, output: !v ? (device.output &= ~1) : (device.output |= 1), command: 2 }),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.output.2',
    name: 'output.2',
    keyValue: 'device',
    type: 'button',
    icon: 'bulb',
    get: ({ output }) => (output & 2 ? 1 : 0),
    set: (device, v) => ({ ...device, output: !v ? (device.output &= ~2) : (device.output |= 2), command: 2 }),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.output.3',
    name: 'output.3',
    keyValue: 'device',
    type: 'button',
    icon: 'bulb',
    get: ({ output }) => (output & 4 ? 1 : 0),
    set: (device, v) => ({ ...device, output: !v ? (device.output &= ~4) : (device.output |= 4), command: 2 }),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.output.4',
    name: 'output.4',
    keyValue: 'device',
    type: 'button',
    icon: 'bulb',
    get: ({ output }) => (output & 8 ? 1 : 0),
    set: (device, v) => ({ ...device, output: !v ? (device.output &= ~8) : (device.output |= 8), command: 2 }),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.output.5',
    name: 'output.5',
    keyValue: 'device',
    type: 'button',
    icon: 'bulb',
    get: ({ output }) => (output & 16 ? 1 : 0),
    set: (device, v) => ({ ...device, output: !v ? (device.output &= ~16) : (device.output |= 16), command: 2 }),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.output.6',
    name: 'output.6',
    keyValue: 'device',
    type: 'button',
    icon: 'bulb',
    get: ({ output }) => (output & 32 ? 1 : 0),
    set: (device, v) => ({ ...device, output: !v ? (device.output &= ~32) : (device.output |= 32), command: 2 }),
    modifyValue: (v) => v ? 'OFF' : 'ON',
  },
  {
    id: 'device.adc.1',
    name: 'adc.1',
    keyValue: 'device.adc1',
    type: 'info',
    get: (v) => v,
  },
  {
    id: 'device.adc.2',
    name: 'adc.2',
    keyValue: 'device.adc2',
    type: 'info',
    get: (v) => v,
  },
  {
    id: 'device.adc.3',
    name: 'adc.3',
    keyValue: 'device.adc3',
    type: 'info',
    get: (v) => v,
  },
  {
    id: 'device.adc.4',
    name: 'adc.4',
    keyValue: 'device.adc4',
    type: 'info',
    get: (v) => v,
  },
  {
    id: 'device.dac.1',
    name: 'dac.1',
    keyValue: 'device',
    type: 'dimmer',
    icon: 'vent',
    min: 0,
    max: 255,
    set: (device, v) => ({ ...device, dac1: v, command: 3 }),
    get: ({ dac1 }) => dac1,
    modifyValue: (v) => `${(((100 * v) / 255) / 10).toFixed(1)} V`,
  },
  {
    id: 'device.dac.2',
    name: 'dac.2',
    keyValue: 'device',
    type: 'dimmer',
    icon: 'vent',
    min: 0,
    max: 255,
    set: (device, v) => ({ ...device, dac2: v, command: 3 }),
    get: ({ dac2 }) => dac2,
    modifyValue: (v) => `${(((100 * v) / 255) / 10).toFixed(1)} V`,
  },
  {
    id: 'device.now',
    name: 'now',
    keyValue: 'device',
    type: 'date',
    set: (device, v) => ({ ...device, now: v, command: 1 }),
    get: ({ now }) => now,
    modifyValue: (v) => new Date(v * 1000).toLocaleDateString(),
  },
]
